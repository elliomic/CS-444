%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: assignment1.dvi
%%CreationDate: Fri Apr 21 19:13:18 2017
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR10 CMTI10 CMTI7 CMMI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter assignment1.dvi -o
%+ assignment1.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.04.21:1913
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 107 /k put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC779A0554D900F8BD0C4D
E848F9F13B73AB1A0265CB5846172ED04407E6CE84A1AEA889E286F57D885008
562E782A4F7E5F78DDC2E8D5940BC89613853F28BAD25515481DC8551D882492
6E1BDFDB7E30090A29447A1881AC19A4530EDA9F2161A2C780E50A80303F709A
6468BB281AE9ECF3B46071E9A75D2EA7FA64BF9A6C51F8C15CBC953BCB23FBF9
222626B0059F60AB5A55E0C2E536C8D6EB443028D8873BEFAF4A4B39EC017A1D
5F3852974C76A218857D29286B2C2266F01B7A3FD8554E8DD45FFD9F887D3505
55125432B7D1A6E8F35578F6C337A1EB1F39CBCC5880C6AF74477EE5B67CA533
3F37452ECD296450BA80E7EA75CC54B6895F0C56CD5B9EE2D65DD767E76A644B
B0FBDA1608368A75CB9B62F195600F38FCC1C8BDF9F942C9877EB88080AD7542
3CDA7EB152379AC262A0D78849A67A6AC2EC5797291AABC39234A939E1D84BA6
D766AC5938FB5BCF49AAC230227E5F98F9EE0A364358DD3DCE8598E3462D9E7F
8A384750A304497D564FA76AF5FBE717AAFD52E637C0161D197BEA0AEAF59FD1
76CC221F5D536481F78A144F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI7
%!PS-AdobeFont-1.1: CMTI7 1.0
%%CreationDate: 1991 Aug 18 21:07:18
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 104 /h put
dup 116 /t put
readonly def
/FontBBox{-27 -250 1268 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962CCA6FACCEA6B71BEEF7C056FBD376F2F0D0BD6BE0A0A8259139B28B99C6
25119B8C60FF7BA002476930DFDC2F6B1B5A80F1C0E544A22E3F0FB2FEAB64B6
A509B61E1AB96121FBF7F2BC27CDE5B4961048FC2169C8DB745FCC7AF0EED507
284038B15CE53E69AA22CA76C2A208F6AD8614CD500D479A5E0FD25E7BB14C7F
C47C503E4CC38975CB0A8F7E109665FB69EBAE6EB68B2D6FA3C967D5BDE7830E
9CE6F13DFAEBC852DF1D7D0CDD33DD4D5CD6D94DD8AE0D48AB638013CF75A25C
04FDEA8775EC52A13AF40FA41F7354624D917EE620318C702237AF8C0E1FFA02
127F862D4DFD0A56774235A881AFBB8F7F4BCB33811C581CFF38462F669B7F97
1F97AC09373B8F9B7E653013AF8170613E8D7E17235A893BE296A0CD2096B71F
16778388993EDF1B003EBCE23DD02949CBFAAAB5D9F6A08178BFB8ED1043FC1B
0B90D9AFC27B19783740E8DDE0E5E01D116A8CB083C721FBB8EBF71018A9570E
78590CD831116BC0FDA4229F79A581874FC3A1F108A4FCA80CE27FA54A2A7505
5BDB3D52E2595512837732322FB5BBE459C0205EB38439E34A39544F0A1567C6
F29FBB7CF931708C8F92786CCBCBB443D54462B3B4B7BD38E90D325EBC31BA05
FAAB393C7EBDB9EC48E4ACC15A247D2348A62293A726FCA4250B4A407F64270F
923EB516CB8A3B5D19876C8755EB291357E4E4CC5903D1A536A635E267F7A971
B1C33AA7F58E1ADA931C450EA8367B18E20E683CCEEC1BC079E837DDAFFF0D16
23C4AED0DC04DD9458A630FD498794823FFA55705315F0687E7592A5DFC8B8D6
FE2F3C654209678C58F7086A8EB0ECEC0A284D646002FBA4783EB2702AAA6FF0
20ED42348FB6E5D6E9C7B09079F54709F4F63F0C2E01A06D760CEB9EAEF2DFD8
7718149A63E0B635FC22F8D599504295346751B497F64920C55D9F0454E5BCD8
913EB4498EBDAD2D85281C7A9F26A07A5A2498DAC55D883C54ECDF281A5D21D9
19A671097C38160D803D4A2CC7B5374B0E7DE4AA7F6D0F0EB084F3985B587B73
890BFAF61E139F063F0DFFFB6E5CA838D20EEC1A3E5962AB3BEB149608C71E57
AE468C89F7400F5B55E3244AFC9332AA1847C0ECCE093F0BCBB1429823BC1777
D69A985D7B5A4780331F2B4C3198250446A6E0DF42C3848D57F312DD3CDFBC2B
6BD8336378B880BA5530333FC93E8E4DA58E648B523B697BF473CBD3A5BF992D
81856A52E229A09C0BCDEB8AE4589B0DCE1A61D9C1E0DDCDEB2F3F47CD18DCD3
F0C3B28D833E19D70F2A7A03DF2025AC664B58DEA22CAF8A7C182C46572C1907
D19CD3936D4660B25A9037212493C906D5740946EDFB447CA61A1F9BDE462942
3B15BA5A96115D915F6811FDE1F5D60AA93B8C8914DEC57A12E6AF6652A95C19
04A00E0A4F846897E6A9CB2A4286AD231045D62697FA0B155D8F123BCF4FF686
9AFE7BE3EF7351ACA879AEE5D4A92D121C312F863760E84C6FBF1E34E44A6247
DFB10F1D3ABF524481A4F009567500B4DD1A3AF74BEBC052597C800F01B8633F
0D193B50B86FEAD3E54A00508154AA23C2C6736EDDA5D616
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 19 /acute put
dup 39 /quoteright put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 123 /endash put
dup 124 /emdash put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2DC523F046EEC4CCAE25792B702C288732F5B13B5CCE7
E8B6A1A1DB86B1EA38883E481BEAB54023EDD9BB94E7780DEEA577ADAA169E66
AB7D8607B409619E79F242CF52E618AC0DAE43317C507CDB27EA8A1472D4E8D9
17E62C98DFB049C78AD15560CE44A39581BD6B555165091C5D41071212A9D51E
6DC3005C821622476DB88946944FBD830DC0293272497557825CF153F8E257E4
1C9A2C1C27CB7610BED918021BCF64795D6571584830231C7EE85AB23906C085
B17C9070C59EE450E6124FA3488AAF61751160F6CE1A0618FEA94397D1EFA9E0
621AC7E9AC853CCAE73DEF3F7438E921BDD42D7E139C431530AF569FD8592D99
8DA4F085A207616874D71D6005F57219784B5B33CDCF2CD8F061090E46E0AED8
3063FDF0E57BACE8CA49A148F35674D09BC0E0DF348A4C699E4C124BD349E1BB
57D26EB43B1B35213BB612B9E011FEAD57A8654671AD663C327C3077284AC6BA
130F486A332EE15C3B8AD603D2DD5C9A39729EF81CECD899B38C830805F9D71F
8BECC245BF43CF5630595D33131C7D0F12C22DEAEB56CBFD868B1D3398B13304
7952C7A533E9BC05D4E0D2D665B62790069CC691DF51E42F924CB8AD451335D2
9A925E89233DEB70E5EA4DBFBECA0FEB86296A9AE240A0F33DD29BE0DEC9570B
8EB6307FB583FD68C7C1232558D0BA1ADA16048CA4C607400EB5747462BD3D5D
E8A493A02FF73DDD935108D435101F2F1A7780EE4FC178A00E16EE6A89ECFC34
EAFC000E43DBB5616517E69D79A69BF80E48E8733A409EA17051D8566B11CC80
F473793493D0799725DD30BD8E491DFBFB14B4BF50F92F50FD2A22CF9ABB8AB2
584E1062BA7DAC891A81532F9C2E8FFEC4F5AAF5CB9C44B52F6470D90020015B
4439A06D3C99FDBB92A859B517ABD02498B2BF470AB25B1A3575F0F120011FCB
67435E9B3B16D7B5A0845B031606F7ABE405C6812A02B62CC58A4F3A2B01B587
641A21779C00EDE51BDCE2CA5DC3008000D40794BB6DEB417BEBF0F1A5BA88CF
525DD6C338DEBC680704759A489EE335C2204B6AFE1068A6DC9C8A86B9683E21
4618BF94B21E5D6AE3DC44267E4E4BD513E6C27A21E05F624B7602FFCD462E71
8C7E9E53472728BB9867C9C85ABC1693DABDF1422312036E7973C97F74BB9444
911B244DD6FEB6D9F4EBD7D9271ACE27A70273A626B4142D1E8DC0FC49299E53
23FA9BA8B22AE297AB3D0F59E53C7A096611962E68082248CB2B9B07C636B39C
D1F6DDBA999BE6AE15A53CFC19B2B78A0FB46FDDDBFBF20252F29EA4FEF605B0
4F0578A94E92F3C96355F601F434A816DA8C19EF67E7B25D13B04AC1627C77ED
C7758C3C52BE08A690D3D4774E474A1BE90C47183746434E886C01D9BF93AC7B
B2FB9169E618C29BC3AB4F457985DDC4DC310AA877F07DE89DA9796182804795
CDB753655BB6DCEC292D41FE779E6D2B5752B89E645DF74CCB0BB07D6CABEDD9
E90274709ED2171AC4B1289438899206862D2BA35E79B0CB3ED066EA64251FED
5E879343979A94FEDA444463286576D82E962509EF19282B7841585E8A8AE212
7090680F9107A1D90B82CD4966828745C605B727A1E5D5283D3D7663DCBA9B17
953FBA386D1E3DCABDB7418332234033EC95CC62DC737D7DF33E43B882DD2A85
17CEA9B57D9267EF2AEDE33A2A3FD4183AB7FA00F7AFBC20F50DE247468B9970
5ED8213C400BA49C48F51D6FB71D877EC56E905C77E56E4050FDA25D9A23F8EC
307D3EE012BC79C41B9E1A1CA9AC8CD63131455A46CD4C41D141F8103602BD3E
65DDDEA395C99251A332BCE2B350ECD40546DA1C41F845050F6C8053EA392C4F
C0796B2CFFD869776DAC9C2428B9E076590147559A05A10AB35B1CBD935D7E76
3AC8A7FA954BCBE2C0C10A40759028C455917CF8D84CD1DC9228F70D87547DA5
FD61F9B421723998D0CF42409499035BFF5B0A1705CB1417669E21CA3259A89E
1E3670F475576B32E23244FB2A040B934F91F5887E9B173932EDC589246A8816
A5F949CBEC6B9EA45C7C23D701298BAEE4694373A991BD8C8780140FDB87B77F
DCA9B79BCD23F4FD7290BBE2F682A94C1EB8CD99385A154B57DAA26F7C1DC548
ADD9F08C2E64F7A57710CA3F0C898387D488BB1A5E204622D42442500897C28A
4044FD2EA7B63F62624FC8C675162B400D8E5D8DD0DFABCF8CC3A31DC29012B2
C6254C27A73ECEE49F5493BCD492FC02A7444CEABB3F04254E49D0119B4DAEB7
B0156328B803ACCC0E78D064B149AF79B03CD2DDE19D3F3FD117A3AE059549F9
72300B1C2F5AFE7D978C688DB03669EBF02D0AD68289E5131B55CBA199D5B108
5313F9FEC4B9CBE2EF39521D305880A6773522C8DB014A30ED7A2F4AFC8EB57D
F65BF6295D958748BDE1B536BCD1888E3A33EF7D2A58E2D0BAB6B1B0DBF2FF33
8823AAFB6F8734BEC48F79B677631B017320E34137BFCE1726CFF9F015856224
099DE2C80604F24F251F7F10944DE86E610A8015C36F3FF8FFF003C931FDD443
885C9D4B46D30133720D4ED573AE38BE9A3F6E88985FE15CDE0C4922DC8704C8
B147FBD113E3EAAC8347A26601938B410918174F4CF5DA35DBF7B1D1568A3219
6EBD061D367B3E68E1592031A8964DB8BAEEFD052FF29A70827EA47436CB4C44
555327784043E8D66675C68EEE4384CAFD8FD36E2A3685AE167A3689E5575CD1
A64CD2DF192595BC6C33B4E0A854CAE0D0F0125D6879F462849C00DCCD91E28C
65EAC7019B5C82B5AA23414E508574EACEB761E4E92EA9B0E458E0696DB87161
3AF7242E966A8975B814C9933426C2F5ECEA95C769EF20DF7F979E9C2B9B44A2
7FD0F0AC841F04C2A49FCA29086C400ACEDDCD7D322819EEFE723AA3A4963F79
68A453F87691C46D7457534DB2638480E420FBF6B44AC4A56F59D33D57C1CE09
8981BBEBA8D9F5B6837E9E323B34BAA1D8BF30F506F32AC7472471ED7FFACAF6
ADF64124362010153A73BAC6BDC0F04CA1BBC7995573650E6266A1967CA3FBBD
FD291C2B804AC748FE449674D0E1A8E3E167F61C4C3E053E95EB9C858D5CCD8D
60C0B5336C97DE58A6CB4C19ED118AEFA210B58E70F14E3A992E11E851BFB73F
BDD8070617210F9B4CDBC09B948C8D47E93AA556966426F6FB348B5483C9D09F
18B1D973C4DB551D7CCA7A6FF09FBFB6D1BF0DBFB81299D6EE87325137CA0623
D4B04761C2C40580E71F26A79163A30FD71019379D0E8A763206817B839CC425
0F02755F45C9DA60C0A1EAC9FAC13903D059175EE4880A4837FEE375C670C5CE
0B7BF698B657B885DDEE5509461E675D0957F2115BCECF1BFB50BD33E9E6097F
2D73F0B4690C206E0560FDA739337FC06D460E3408A7FC4625F504C914DE5C90
0B6BE1A3264C6A7DE3A63465315B00360A3CE4D4B30689A00A6ADB9A8DE78A91
2C8F66D3999F5E78E7F644F7748FC6878817DBA29B6E5FA08C45393E7E3EBF9A
C4B4966516CF1CC81D18C8553C2457E74AB9A0E6729F27BF2A060A182804EB70
6DD97D41FBB143EAF4A074133BE31B7065E182544FCFC896DC782ED93CCF1D12
A4968C9A27979A2D4DCA2B100F228631798DCFFD1A90E7B91A2489570229FF19
90776EAFC8F09E7B5BFBACB001F7AB88F788AD1D8786BD1684374110F51C4AA7
956E48C1162DA5F4F02E7BEDFE105B1476A2AF9BAB18129E83E1B5E4569F6E93
4D494A7048E659D5C0D1AAAB48710B963E50D78CF2449BBC865FF62DE2633358
0293692B40778EFDF29966F4DE8F32F9AE2912129BADFCC7A9537FED68EF44C0
14A2232BE072C75E3DC6E350E571FF1F356BFA89C560BC7CE20DB9B0010B964F
C2AA3C3014B0CFA06D8721358120165C000761F0586362D85D88B2375467986C
57E3B39472849198DF0F028E1E5AC783FBD03AC1F08AF1FEC3E05DEF1E8287A3
954207CB6E5600F6494C565DAA6479B91D22C96381D5DEE3D6935C22A83A809D
225E7447EDB459F4C2F509CDD5D0ACB7E2E44824EA6BE93A35246C3E90FEE90E
F78A9558CA4849BCCD84D126443086433ECA040F31CE9B55889041464281616D
7C5735EEC34DD86D9A1386FF432E6D60610FFDD3C69C8212688F25AD348690E9
0D2A22E575A5C8D9F1F3C7393C2239C6C0369E4CCBAB49DD46AE69E6EDA9F999
5346375E8D349DF5771847E0FB152A18E2722A3D4B6D02B1221C98D05D964DE1
C9A534588FC1D1214C8F45E2DFD66A47A4E96D6D168185EF2829C200A187647F
31806F351783981FA57DF496DC7D6533DFCA8EEE57B2C2396825E6EB565758A0
DA1EAF3809809F17E88D81969C4458530BE8FEB38D997C813FCB039402A5DBB9
6B9DA19A801D8429AB03B1FD91B650B987C848C246B80752362FD7EB98741115
6EB57F4D826AE7791A62E140232A614D3C68DA264E1004FE2B73DB9C994261C0
BEFF43B103785EE93A56106445F44EDA2F49C149593D10A62C78410683B9B5A0
F2D3485E75E24B5058627151E3ED6541BB0672EFE10F7960D34054AE34878743
AE7263D390568F1B4A97C1E1E13463999448AE209071B14EA82AA8F1C2790F43
325C85E685B278ED054247244F2FD282069B8324468FEA340635C304A4AB579F
56E7B102568236EAA9EBFE3D9C8910E3EA0ACB1990FEB0765A1164B876B7DD4D
6F0FD0F6A8ED77957A9927121547BE4A0D6AD0FB696370DB36307E1B5DB7FCA2
11B816565E4DE81E8FBF3CDFB5C3DCA14E075BE1863B82714ED05C5024AD4437
C4892DFDC62FF4CA0A5845FED39DBB8545DDAF6AF77B86A0A53AE35990EF0DE5
D8545A7E36FCE5C71B474CB40949E284DD1FE5CD259F474C49080D5ECC51D237
56A724C70961DC907066200D342BC5FE398822BCAC5ECA7DC78607089882879F
CFF1FE1585218A3559CAE1E70584CB9B5AE1EC34F08FEDE574CCFBE01DB52446
EF85EFE2DE1502F965E48C33B005332B05B87D8B1DD715FA8414D6418B0B3AB0
C3A6438126CBCD20DB556CB2FCC8E2208AC3338F35840D96132A038AE8832D60
E96485CBC8D50618AADE76A64FFDA2C959BEABA2AE64D9FE7E45A206B7690285
2C390AF7990BF45597CAA390FCA7EC4B65017F1A04F68402D2543866099D51A8
391369BC082494ABA734F50C886FE424036A3A7A5BB8BA3A706A3086B00882C7
149890C992F563AEE48953407F60F0D7572D7A5CE153CE688AB425805ACAE05B
A20AC6084F3D3FC27B668B10DB77C84B72ED72C017CFC2F9832A966D6753D233
E977CB806B7641D52703985B1AAB8FD167EF8C17EDAE7A3F0B94BE1577F43127
5D921DA1CD3F5765CD2722C6522F1FF2DC9E680F70B2A09276CCC59C53AE762E
2E0C639BDA87AC0ACAB790BCF4B7F1D715E38A7216D7DDB69D3A95FA7A9E7FA1
94DFD11963A52FA135BA40355C87347B2CF25557B0CAA4613532CD6389BF9877
524485682FDB95B3212A16A8FCF69A1F99970CF6F8E3DCB5B967B562749A59E1
E7D6CFCE2570B9A003D836896318C991A2805D96208BA1CA566A8C9617A8BF1D
28E43E193414A3EE2227DDA8051B84D10F0D42AF28B1C70CCD6FA9669FA2D52C
B1B3D3DF9B17D59DE0BBCCC2515FD93EDB868D393DAF0FE283FB37DFB0D89608
6AEF4FD70438FA196D30A3B7EE856911F7028D4E73968FF20FD4B0CC021C9814
549ABC559B334403FEABBBD2B7348D57C775C5731EF7138EF6A35A7B3396CBE6
D2D1CB24168FD7CA09F6952B5A198BF18F7671B0D801C08BB0CE614EA4143CF9
41C221B05755574871BFB1980F1E9A794FA0881EAB156B98CF25BA8627C2FBC0
4567BC0CB80A3CF11CCB35A4A35622FAC13D08AF235F252CA710E66C518F663E
B158599033B929961D9CAAD426C81AB650BCD83D1DE8DFF52818FAACC5F06977
3D6F939653255226D4B866A6B1A333759174500EC9473431946CC787E1C446C1
69F863B13C6B354F1EBD2160E39155B701A7DF43C2433AD2B6C2E42250B205A8
9B410D25218B35D87840EED6CC46F4DB3586604A64CE566DC73FF382BB6233B4
1BFE4742A664DEB52C0F2E86ABF73530743AF6ECF25ECDE5C46D82BD3BCC048C
B89BED415F33BD1101DF2FEDD9CDDB18CD0807CADCB5035BD204E8039B932B23
45E8AB77ECD710BB6FB28FE81163ED9DA8A13E36069837EBCB7297059D66A758
FFBC9980E4D08B2C73E51E206B747CAB8E8C6145A4961F25F0744982881F5419
DC7D31F0DAE73D00C9E52B1053DDCB4E69FAD3AAD404210E7708194CC7AA093B
F8AAA0ABC838C16237B2D6083D551C49EC892AB19704558E67B6C3D3C83BBC75
0CCA7B59BB6E2F42815E11D4ED3899CA8A40DB042E0916D23AB3876C60FDCD1C
96B71D2CB68A18BE67A886234A8C1EBF48A7948E55FCEA6ED73EDBB87AB32840
9B1AC68B078BCA7EDCB2D5BB1CDFBF78D7390383943575841315033253E42694
31BF5A8C50FC1FC4FE36A8AAA794D9C97A9B39F4366AEF6B24721C5C8845FF1B
FC93D137069FB192D47308086B06016BAE64E816D767126E0280ED5C16D857A4
1D2413059FB2B9DB1F794B0C9D19004866F41CA627C2539BAB462AF59DA2AEE3
A70F1482EE6E980B09BD9FF7CA713CDC97B8E01A88CD78420D96A08F52161157
4BEC8EA779D30F0C0B4970780EA67D79D2E1CD9F8E47FF842402C71401AE7865
E051CC95767955F83B6063432BBEAD23226885C7F207714DEFAEBDAF267FCCA1
7E58C4B638A9D8BDE7542D36105F82601C479C353980F9E91BB622820438E471
417F3C24C29252B3DD95D570BF33331F4905C8FE778260C845EFEEF409B2C41F
E9EC03BC2DBC855CB430FDB2F904DBAE810ED1E29564112157AC5D84EF190D30
3411ED3324F65023418233CFE29700D0C5409D2D20991C685373B7C97013A55D
62D1896706BD32CEAF055B301313938AA8380DAB20A34A530CC6A8C2D6ACCF5E
AB4E2883F81677493AF20580E38A543AB1F185C8C6949403783D4E4BFBEAFBCD
768543A5E3571CEC409F646A30C1FE63D56D7DD2295AA4EAB7B5EDAE9BA98B19
ADCFFF5964AAE32E21B7CBDEC4D89CB4F3418FEFCB42F1413614EB2464C21470
8496A7FAF4EBEE70EF169185C2A4C1FC3EA83D7C07A0F9796541EAA72948F3DD
90CB696554681C0D4FDD54181265CA35948660826D849942651D384B7F2F42AB
B98FE45EA4C1B2EA8C606B624CA0C8076C592366D68BB6D5BF7BE142126D9AC6
B33B9B377FB1AA46215C61F0B905E3ADE80229D38D6DB7DFD4373DF8B8E3F867
24DB398AF4C1633F8209DFB7AD33B971C99C10CB21294611C5F2E423A465D65D
5BF73511C22EBDEE839422A23A2ABE222366EF9ACCEC240FE3504D8DA3BD11EB
94F276EAFF4D4E118E2199B08626BFAD55CCF0DD76E1E7D1D77A85DAD6706B60
230E93F0356C42483E65166DEDA38E42C1780122E089DC54A7711DD2C3055029
070ECFB4AC57414828B6F546891A076B1C85083CF73996424B3D489777CB1669
566E2B5C06FDBB4D0C784288747FC8AFA5B2958BA35EDA09B4F10246FC566504
9D7C28367059E51C1E2D898377A1FAAF159BDFF4E1096A14A7E11D6ACA53B39F
45EB8AF9FA568B67AC7AB9B5193421A29CE2C399A87F9381F9F360B8605FA26C
AEC80F8618880F1FEEF288B632F6DE1856F854EB5A0F294DCB65DCC387EBCABD
A6F3C2773CB6A8E4B61F300282FBD80CF98C7969ADA96F69391D31BEF2662A0A
4679449A5375B2082BD6BFBB869387AC2E54BF254B2B1D80E65F84B98D855AF8
A6A02CBC0F6E59C1FDD0A908C57475D8A11A8675451B405E9C9BEA8C9D3BF149
56C5C671EB37462B26E29FDA51FAD8C6057C7222ABB82AFC973CF7A72E87965C
6C6C6BAA91F9FD4054A96317C1E7977DEB6696A6D3FF889A68005B27FFD1BCFA
ADC46348637EB85439A2B9A2DE13BEDFFE8E20E4683728F542DB5D5BD8A7143C
83D99D1EA45E9A027600ABA5AF557431210948C4F8D38933E40C0AD0FA4978BE
30BB07E4E0672EB31ACC72A3AE7F39E0B841AD82DCF2C735DB3DE1B2A6666B76
35587742B0DF0BABF95DD9A7DD6B31C887F0E344A048FE029891EFCDF47D1E1C
4EC4B4636C1E330DDA5E786FE1771D9D5176F3772EC0779BA31467B07043EF6E
F24E2A1AA2E6D6EF2114C968DBD643651574296E850ABE0A6ADB467D45AA174A
A169AD40A81A9969FF3BA0B15BD6EDEC6AA2D9C9E053A17A62FD7534BE659A41
9FD9D653A60355001C660E4F339D50E7E27BD11528D957DF166DCB0D81FCE5AA
715D90D18A20ADB0544EEA2B44C93E2CA089FBE296D008819E25AC86B6CFD40C
79AF592A1E07BEFF8638CBAC1F193CE19581DC93D1AA060750C99FE7BBDA2751
FB99F8880003EA85B57B3EF39ABAD34A6AD4FCE3D12DFB3C51E8DE5BA79CA3EE
93901CCF0206E5FBF9D1CF310022BCAB304C4089CDA3C7772458A407BE995B1E
DB162ACA47B4A844D8CB4DF3ED1C20195F4CDB2CA3F2270AFB3F5DA55044F8AB
8C82DFCC17348AEB9FCF5FC7E59A4242BD419EC74FB69D5E173153C8DA64DD4D
0A2DA7F30E3402203E1E7BCDA7EB6C1C4F3C2A14C052625CDF291DBEA93D6BA7
036585AB8C286D3212C060B72A38E734EE7256362567BBA7272C422E367072CC
FB14F5C985E4743ECA5D22911913E182AFE5B7CC7C16602448DA9ED2DE327347
AF84BB6861EDBE4A35A0821E488046643C5B1E064F9A2605ABC8425E2107C60B
65A954EE0F17A91703E37C1F2238361C8CD85B2A1AD19EDD9EA18A20F8250F36
54E42CD4890B5169EACC50581C6B1997E976958BB7747C7674A1B4DE9DBA247D
D75DFFABB0F7D12932B933939B99122D9247710C6AFA618099F47162C8F0F264
F17808D410D289238AA390793A0B7227CFC4430DCFE6A854D3992B13F065CC1B
8562E79C52CEF73D694C88B6ACF3816157050A6BC313E9D81ED82768094F170E
58F4876AF50442329C8DA2B920EAE7D9089C5C98E38041424D79F30F73F89699
0DE2745174DFC9E816D322EAAC9EB981B5B28816FCFE459B143E5307C2EB8A8D
1B98782D679D823696CD254D04B4BBC57CC5ED1817A9219247D04258D9901CD0
C64898096702A461D516BCD31E3331314FFE519F0D03BEABD5BC7FADDBD1B1C3
BD3FDB6AF87EA0B2459BD38CEBDD603E5E9CBC42254D83CF42347498C8538D38
13546568FBF4BDEAFA1CE4A9959429559C114A1859366E75CC04960E6053FF91
CDF61F11606DDF58B3A90E2C4ADEBE595BD46D39F5919D75EDAA75E069ACCAE0
FCE8D7695B8E89DE7524B2CA42AA0D95F9C93472C2CB6CC839960300E4589467
953B99ECC677EC5AD4543A54BA27740474274CDACEB679227B190896EE3045BF
36FF6F38304B6590CCFF4CDD4C0EE6F74F17E6625797DA24E8495A528FA4D5B7
76CEBEDF3005ADE5D59CCEDC7C86E964B692275F9566EFA8220F57BD88230935
FCC9D51CC367F0FE0A6EE9B9020BAAD2CB328155A2B3EF988EF2ABB4D495E486
36317C7D3FFD3F0ACAF90D4CC4D2BBCC534AE61FAC19C8C77AB6D01BB0B52FB7
F280844962C8F903E10FB2D2DECC36661B44DD26AEF53CACA09D2DAF7049EF79
2665D52B15415BB26A479CA6292FD3DD91186A26829EE51EEAEB8D54C68D6097
AC67389FC7FFD12E51C3FA86461A130B562090910F3109E0488BF964453A3A54
0864C82C528B5DAEEAD4A8E707A5B2BF7060E0840192B5AC95504A9CB42D3121
7A91228A09BA3671D95EBA8D5701CEF93C13CD3A8BFC99C81847E84E522BD9E9
5C334D34B1AD5A21D26293158D46CAA830390F809F1E082ECC3499611B90DCB6
B0A824847B08AB58D6BC83E2FA0FF0547519C7FBC51E043C3FC32B243F0424E5
83034A096707660DCECB776DC2071F6A0F55E76856ECE6CACF6026115053942C
BE258BC6F4F4AC2B008252B9A47BD1139020B9C14740CC9D91C300C335EC94D2
4BC1ECD22ABEC67ACCBD504730799881536A88D81E2849A20EA88C24D4E1D3ED
A4E0D15482B1079D7CC4E8C657413ACB21924E32C0DA4D56FE9D50797ABB40C1
E858076DABBD7BD9896A1187CE67438966CE9982E9BBD8B43CB9FE4201F72296
C3A64731E3A8A02F9F1D970CB07665EF72A1344A64AA239B3E20FB72BDB712C5
CFB28837B046D80626F76DAF25ACD4282EEDB4328D0C6B36B279040CCE4FE635
F7057DFD671192A3EF1392088D5194DB6FE6444F38BBBA72BAED4B5E411F4D40
43A31BFDE97F1365D301FCC51366B28EB54165685B7D6E96048F6471FFD5B39E
8EB1C4F6AEF66C09B36EA3263307D1B8A7060C9780F70D692CD0973251DA20D8
FDC41EC7644276B778919324B78D2CB63FCCB96EE43375D89B83E096D7C44FDF
9469E8B6CAFB510575CAC91E9B43C6236C1E392D8FEC21BBB43DB62E76AA1F76
5B428A11B771840BACBD2F532BAFC484419BFC6D5F3F887EDB75F99CCF8011F7
642F55A488177B0188DB50942EB693BFA0602AF3B211C7CB305C72CD30479A2D
D75F715FA1F69A69CE9EB75FA2A5D8D7DC4B9C2E159072C802F6C7475D137356
673EC66AEFA93D7585B46A4A2BF2263580CBA1E552B532DF512A6EF0BCE51275
8AB219BE3F96613EDC7545C3C73BAC0CF3A434D519462D8A1FEABF1727EAF966
5312BB93E9024744BAB8A5AFC13FE1F7528D785D4364F8B5F5083DEEF698AAEB
43DF450AA7ADBA8A106A97F1CA3AC7882F9C85869E1205EE42220CDF3A93DF1E
564AC4AF3ADF7448B37D9FAB39917F66FD383F654FE54D567726744AA248B54D
9EDC59836AEEB75A42A52E8F282949C977F6698ED093654FB03C21932E8ADC6E
C7E7C0F4ADBC1FFDF391D6039B852820AEE9DAD1AEC52EADA4ADEFEC87F42F53
711DF8873B1D1D0270BE5705F65030463E25CA6725D12C2BF6C6B8C223062AE9
C21B131C1562AE2462DDF46CD4273C58F2CA50BA22ECEF56E8E1A838FE0F3AAC
C0E34C9139741C8A3403A416C3568902958CF8047D4E26D30BB9FDB56C0970A8
7C9B0A2D3347E23F28EEF5099D8B569BF0825427760F7D5F780B8A6A7CEF7E0E
7A260C482CC8E12BD13B7B702D7986EB4168CDDA24327A88EC00CB7A6E1D6BED
66DFDF376817C2DE806C7A814DA8BFD29AFF4552EDFDF38DF2E36DE1CDC2BCD0
49CF40F32590EB647B88918BAC131614F8116257615D4AE18859752B8EA6D2F1
11DCF068CCAF94A18FA06A1D39F0789E49E97ADBDACA00EAAF9E809C74E25673
6F0E8C29F60A40720C79B89FFBEEE2155DF7D935BC9984FC6A7322AF6618E942
76833EBE32E738660460BAB775A4FB7C748B36AC2EE27E30AC33BAEB80531319
154A94A81B19893D0321C75AA2EBE84753A92AE89E00378E10023E085D15F2B6
77683851C359027C38821D8814505B2BE31BCBCF8D00D23A5CB27A0ABE75BF31
856C95AEB5BAF5629AB2D4FC7F307057F9027E36EEC1FDD2BB4577110C6EDA76
DBD9BB79C2DF95A5AC7CE3D6E093A1A21711A16FCB1CEA7758471214809A64D8
E279B8C163DB2000446996F78D4954DA8D823B70B1C73CD78A0A01C503FE6B47
EF29CA21D89969790E55B4E23ADAF16F912F4B85642CDEE8C130A8A0FD33FB94
E8926EDCD1359A6FB5C86900DC5D677C7C547DC315ACA9F6D5E64AF349A2056D
F18785A33A4B4787CF55212A346427DC7A95D2EA5E0E2C0D182A1161181C86B0
FF3C495500C1956627D7B7B8672E5A320FEF20CC90588A3736781F66F7AA5188
F9BF5331DA58D3F7C592BA77A0AB340B8A1D5FD434439CF7D2D60C493FD49B5F
27A1B82E97EBF4F588D66A9F79794F23EADC2A5759584D7718A6B63D13766068
F96465603DE222265A44D813DF60BE42F8C047081F2A3E22C4C91768A73AD2AA
CA3C0B86FB4FA185F1D66C45BF2D2C92D8A2287629B43F3794E38FC7C715479E
899C07B646F34EC02316971A2B28D70D7719BA58CF59BCC4EE356DEBF8995BEF
3A4405F88E2493EE282F540E7A1224BA34D157B09DAAB23F9FB1A2E23AFE2FB2
19C728CBA3D44CFFE3CC8DEBA368032734A02A8CD51EB0820CA80F637CFF1A33
247550F2EED779383F7BE545EEFFD0E9CC36ACAACD844541287223FBB143C431
371A976A021D095684ED031589E11F2DEA6CFFA363BDB7AB959595E7182364AB
DBFA310F6FD5202981DCD40D1288614C0B489BA81B5BE1477CA34762DE325BE2
8D8C2EB36CD078ABB55A3484E3CE2587B48557A98625D25FA2E0EA2F8D50D3AB
35B4CDDDF4AF6C5957FAB6713AA09BC25EA43C8B13FA75DC8FC6EE5FFF4D60D7
30AC940E4964F1FA9DBE4E10CAF074E54B4317D0832EACD3E421FE2E85D366A8
B0C01D28ECD5796222E19AAED235443576736DF6FEDC9046A0EA44E3ACE269F6
B3DB2F51AF128B42F170D807AAB726F2464A59B3F5BF43AD80DC6B08A819F355
FD2657167DFEE4108147810DC1F1341E02F1230BB1F8D23B55D034B65A5316AB
8AB7E1A820461924D4E2168A3CFDA897566E2EE7C61142D4BABB473078D5C016
E936D50C205E93E06E800CE8996E8E0D93BB18B693C3B8A996A1AE20204A36E6
462BBB1F3771134732EFB33F684182E827523F1D2DE8687E4536784E07B381E5
15A86938FE5821183FEC014B2D54E167C465B5929AE3F299DB045D8313478A7D
F0F61DD4CBE63A3C2BD4EA13F5AB760DD238CEF1E7310FCE1D2614772EB453EA
7B797936B72F77E500F4F540B0D6C01BB3EC5EE5E30853A0D5E90D148BDE53DE
2880514590F1C8E684D8AB1A8DCD012E183BE5BA36BDF21AA749E284CF57CC2D
81BAD030D096F1CF2FDD53A7DFFA758AC52DB1965B8FC7D94F2D02AA17C71A9A
5BD89A0ECAA3407509D6382608CBBD1D39949042330A2DB4A9603F675290D993
9B0345CF62770CCC23C407D5E9987D2A49F0FBA33F3FD6D295FF15C219D7DDD9
10313E3E0808B633A343AD041D37261BA889FB40DB684E94C6C3F217E468542D
BCD581708A8C3C5174DF38420526F9CE1A4E3CFB3B747A1FD37900ED8F6C865F
9DCAF671FCE9603AE88E070F7B447CDCEF98315BF2A10D92FAA12AD286B569B8
A97D9C8B4B36C00D09188C4D98F7A4F0B7AE83DD9BD0D7E229B5F00BF13C02D0
05A4E5AE39D440F08B953542E4B0F9C85EE6CDA05C97AA17D3322E179B0755FB
E7B2AABAE94EA1EB0D40CB90411152388A7D91FE0E501010B5DFB74272CF72A5
F385CE134C3BD22E0182A115B693CAFA76030FFFFD0F218E0EEC6644E07208F0
5926612D1B640BE39549B2EAB1E9BFA310D4FE6362BA2ACC582102261327947B
1EE45EA43AB2472F1E17024C8C08264239566DAF135C1526C7088EF2827F1D52
2B47F07229F0947B60CA9BCA9A6F6AA9A4A4708A7BB1805EA93A7F6F8226A32A
C8EF307AE54F1D4AD5DB402B90C0068277BAB6E21010C0C7ED25E82A13A9D328
A0084483AD371064295DE476C0883222A1E968FAC8FB592FFEEDCCA0C95E0446
873B3AEB00F8DAB2749D85DC0DBAF9897823301043D213DDCC823216E003ABC2
99AD9CE877C073E8E3262F49AC893F4F5F9435F75062CB828C8332C74AB5ECF9
31763A69FF8545D1FF0BC4911A40479A54AAE506E43BCE801107AA92CBF1DBE1
96406B0CC6E2803FBDB0EF214EE69F3470EA9DB825366DB59A717CB39A47E1FD
D56A1C2C2433ECB69A89169142E62173B3CDA46E0B604B367A8E4AF399A48999
2FAB99A35BECAA40046EBCC881FD84E1EFCC160A084A8E19CC421B38152B02D1
1A0C37029689086D69FD55A9E7178C18D11826A5835D73411E7E55A69A76556B
441333627AF901AEF3C1963620D33AADFAA1975FB623E63C84413491C7070088
B3E29CD08D05627E3E2EBE08E4DA99E25295A9A3D01EDBA68AB6E2D9FD648E07
84E448F483AD7A9D62EA3BCAEDD9DFCE266E596F1AE9E9A911519C1F2481F03F
A34B61C1390EE803A87FFA25B206BA7F5B5B6BF7C91B8A4E095B539DB4D5BE7F
67ACBA2E8A70E467C0873C1AAE145C4D146508ECBD79383B1EDC80159034D4CF
CFCB2F9CDC4D3634659AB3C57864E27115ABFAF4C492F12AF6F58EAAF653702C
D0B0FA61FC3FC69CA91461966AD6E68E03FA5F5904527B5288F5A1A6C9CB83AF
5B3FFC776CDF28FF360F76837C4D9BA3307AC2EDB49C1CEF21D10AD84E4DF006
F29B80F86F9942EBE5AF82E02A4A959BCEE96C38A64B99D8F9F61EECC6A2E565
6E86C0926AFE8E313FBBA0FA8879A9C240A79650ED58E51515A55717537CC64F
0048AB1619B5ECA93C7A56386AB760618077652C431013BB6DD2F769830BAAB9
EBC3EF7C6AF821F4A5B869D5706EBE3F5BA713C89E665503453802318C339380
1A16ABAE2EDDF456A74AB330F2E9842055047D2948228CBD6659D1DE2B4A0927
26E5EE758A9204759602313D9CC97428AF492CBAF46AAA4A0FB873D125CC43B1
38A8614FF6EC5ED1956B6D9D575366E0BD0FB84C6EB1A47162495E9517FFF1B1
B2DC6D3D2B6D7CFDFFA2F3411D7AD4996814B6F9723EAB2219CFA536836D1BFE
3FDB417C0CD10117A9B60A7488475DC14AC0734750531DE488057281A836AC25
10EE96506CD7933D423910E4A7FCE32AD788C6597A3B3FD61C6CA3431F0D62CE
541EB0899510D6F51E30103F75A7E4ED58C717C15252A019D41E4724AA45A472
3A5A4927DF1D13EA12B75781A45D4815B2F47801071CD2FC8FC6B53A1BF3C2BE
21BBB2DC781839BBA90CDE8FAE0509CC0D91149BE35B0E588A3257ED8E79FC09
13E5C9A0B7A691D74B3B938CE96FC4D28461CD3D402B3E393E611B7F862EDEB1
1205E7F04450F9C69686CC1AFCA373CA6521A5DD388EE6CDD7773A442A8884F0
363418BA7745C81F2FC05895682B5B8E12E20DD7CAB11CE985E4CFC7E09588E0
C982A091D82BB395A0C10CF3A4A962D0E39A350D13A43DB8FD03B631A2A2B3A5
B1EEBAFED199FBEB41C5A220BBAD61EB6F905C243D510909DE0F43C05D1ED8B3
F71F83731E7E73962550E0FA4C218D6C566A8B0A484277CB45D5B3991F408F22
F24F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 18 /grave put
dup 19 /acute put
dup 21 /breve put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 127 /dieresis put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBBEE171DE0B4A21368F9B83AF7CB286D8389785E93
B11277C65D4D789AF99B1D7A3032947A51DFABA0DA3B94D8D4205BE243264127
474D97F3572385018D62ED4B1A399B8E4AED8D7C329F109DBE3015A727DD70ED
6DE4DB36BF48205C8CE0EC0A77491A26F93F7C0A036827625F115786A2ACF14D
47E189148216456EECF3BBAE34408904A558C8A43E369A01C4BB7D2BBBBFB271
A89201777264C399F3925DACEC43096BFC6EED7D5B536D9846B22B75BE321739
617F870A37FD85691FBE1D0A38FAEF19653C8D5D5C1CD4661459A4EB3A9DE450
E4153CAD5C139394EAAD21FECCB8AAD024696F68D8F2A82BD0548AE275EAE43B
E62A2C1A6A396BF4DB127663A36D09B0388C198F0CDFAB1BA53D79420A0C7529
B0BE757D554390F271204C18A4841F5D5EE228C9CC7640D43C3FDD796626C500
50A0BFEBE25DEA3E70DB25B9DFE02C1469769932A190423793E5B1D63949536D
C5C11694931A599B93D36A4A40D949C548F3DE4A72824259C3CB3165068E2E36
FA46AA5686C3A0859D63FFC3A1CCCF0BB666D867EEF0852A586C13A95E685852
FC46EDBE0DC8DB890D11D83B238DB7D34923A1FE282B926503868BD171D61955
7A85667E3D314616A176F92564B809A3F2D592816BED24969F5488188A441F40
9E0693D92AE6832C2761561CE7137D96A73AFDB7356D21257EE38E8953DE023F
179D5C81ECE07BD4FC0100FB0D88907E8889A0D76518025E01F2DC8E7376070B
77C6D79C45080E70F38ABD3948F568A0E62669597715EC3F05BFD4044C79F36A
51F177E80007E54C0E9B46867726A096F77A39CCFC2FE253D9053EF75CAFDF2B
77D6A52ACC696507BF9E1EB7BBBCCEBDDDCCD03A3A1B713A2C6491DAAB322422
1A23AAE97B6B2BD8D4102E906FABA2394A3097DB613C844AFE41C6709E48702F
F339B460E131EDBAE5C75BFB9F411513A5703E9C0A45E76ECA0255DE8339B25C
51257D84BE020A5FF42518F264C1A914E1ABB9361EDD47A2DAAD4CE62C40A2B2
44BD22EE15680E972DC7B08792C39F9D5E9FD560C56A5A55B30BD64A2C8427CC
82288C9CB74086FC305BF530022496525F9ECC8CC82037E8B3506862BD0AB0BB
5CBFAFED1518A8F382F5CCE3B918C8932BC9F78CD0476D9278138A69FE89D3F0
92640538BD35393B684F6325C14861587EB0A7D3714416756677B699C0A0046C
4DDC5648E320BD318A1B778F53130B0F2A6A1BFB31B0E80114387751D0E501D2
C76CF2A43C003B533F0B60A1AB21DB80CB32FAD07B54875DA4016A369379CE11
63AF397BFE766994A89325C3FCBDFC402C8E812DB272C12D82121608E423F63D
C3AE01DDD8F3BEC88BA7B7B532CBA14F14D21DCEF5F73D177EC18BD54055E6E3
62620C07F76407820FB34C354E2570F0D462198C1F6242E7A9C7A4F43C0E54A6
7B594863265363E68F8B20672E6F182D90C9D7FF90DD19C8A7FBC7F8CE9DFAE4
5C937F8DECB124E4199432E78E1B4C705A06164D02890B33B883CBC1E123EE4C
1C0E7277B9CB070593E1BF85ABE0567D934CFF7453F7FFE6815F119B0C76275A
24AF43A2EF65B01D11E09BA09F1FD7B25B907AABF2EE2B2F103B37B9E51B2871
2B184A5C904B08B51DEF4F68EDB4497F29F66157D00778624184F4313F0E029A
E3E198A6C55DBBBA2D955CC596CCAA942B76B04FF5636D3A9263A85F1265D4A8
B3EA8278B2265FB5C392EE8EA37497EA5CEB44C750BBAC7B3233463C297F5496
2105BABFEA73671C22E7CE9B809AFD38E5945124F8348409B01C6BFF1CFBA9F8
B904CABCDBE19B7A9BB1D224283D8C66997C575AE303919D5FCDF5890EDA999C
8CC7A24079978DCB1F5DA74290D15E26805198F25FC3EDBA6D716D7E7CF9FFE4
ED77BFD6CEC8B6DDEBDC066493A86655068E4C5293EA38C3B14A2FBCA536344C
E22B7C9B0D2DF7C100C14C21D27DAAAC9C9C3B5E7A06C91B47BDE65F68FE0031
F944D67D10EDEE65F08E338BDED58E2916DA1970E5000F56243C4D5C790CBB74
78EE343A9A8F28A7ECAC80B36004957FA654A08A7B4DB479670CF1DB67EDBDB9
028FF3E267116C66C532132B76384E1AC797CE9E1303F36681FB9FFCB0FCCFDF
7C25B17DF7D6AC44D1A0157C4344DBDD7692C0BD5905ECB3DE2F1AFC7FF307CC
61557980FFFDE03088A8C80C98E9DF6E7A54795E34AFBB1A1A1E706E3E705DD9
42328A64075E7A74EE851253072E575F0CCBAECA7C3D69BA78ECC1D0684ECFC4
4594AB2B4538946C812E1863D6412FBE70E9403A6F01C3A6064ACC9C6BD11F1F
4B7CEF02CE47143D33F9D045B1384347D283859B54AB6930193EE59DFCE7184C
F456F978F32684ADD43949DDF8A65945FD04871C134FE2B016CF4624D6AB0693
B4A3CBBC50BDE110F2F76876871565CCBC93E5548E8E63DE705AC721BB4815E0
52420278A1BCF4BFE1AEA557CE4E2F26679D3DB19E49392428B8AE2CA1D93B58
9BB30CA2FF423B72A0B4D0A689CF9A92E2D21BC9E9C42AC5819417B172ECD8C5
84F0CBC3BAEC1D14564FA48EED372413C16B8B99B43D4DC050B71D8FFD716600
5D4ED724B32B21271CBE82F809ED801D98307098B09D72FB04CD756E3F44C907
87D0930273A31C39491693BF7DBB3D11F29CB549383EE69FD30821BFBFDB0DE7
8A80E386566BF0ED19EB2368C21B5CCF5807826C24640A7A22B43E1F5957ECDD
7D0A01CC5491DF02FA9C5053E399E92D4B5E749A38F9E6EF157AE6B35A887193
369E425FEF1840F45FDD669A3348A780BF5A0325553A64AA59D93DA169143AB5
812448527FCE7B8BD6B91DA8B85E00D557D7693F36D23FBF9DE5ED85C2D99BEE
A58929D8300E5FA5299392C1AD2B99F783DF66BD98C080F25AD0E5B92CB7EBF3
D4D87AC57CC828CC919B679FB7DBFCAC402332EF4387C297C0FA3F3854B333F6
DD4F38C72F253906A1BCB2E8A31462029DB0DC2780B91CEFB33ABAD0FF9AE1AE
EFDA9A0921CC3BA1CB67A4A577FCA13A413326A26327453A290C3D1A7C51D229
1F776B826E97FCFE225F3692BC922DA4172F023ED94ED024DB1A6EA1BABB04B2
5BEF1AE14416A19817CFA900F1620B548F8496EAB56398AA92A34183BD879701
ED045913174E01CF1576F015C0E08FFFD467DC922B59BB93BF77FB3F67FBA405
70D53B6D2BE82DAACF6F465C28B3E7DA6C0D3008CDB9E1D45796DB1FF60010BA
653CF5D0FC2A66F77C6C6940E1ED08A4B962861959132FE86207EB2E353E5C35
BE2CA6A9A05F4237B09A799C18804535CFCA7978ABCC9A343DB0ADCF5296CBEA
1A7FAE49ED5ED240FA2ECB302D600406842B007C8ED5AED8F7902166BE7FC25E
FF47985EA5FD1BCF41132DCBB46483476AAB3D5D557D5B4CEBBD71CA3D8E4B81
A0C44FB1BEDA954E75090530E1997B9F94371ACFAD5255CA7C8456CF3B52357D
DDC6931EB371FB82592A15EC07CF50A4CFE04B6BE836829A5B14E26817CD82EB
DFDE5D97CFFD33C4CD6CF3538746BCD976A230198FDFA33E0C9E82379CF16423
896FB1E629B63A95B8F5E3AC2F2D6DF97F0B44C13E9F279F3DF42C667B158026
A756BB55DD257E32F72E44F48DC712158BC04B2E86850CAC5B5B48B89983B693
89791B16AEAF5F51D59199352FCEC1AFBB04653DD3A056DC438CBCB1C7C1C63D
DF6763BCAC88E493390DB144023231F65773C342C55B76171B3CCF51BE5BD665
A2BC3CAFC573E2C6CBFBD24FF6A38FE988D8CFA838CFF4BA16A5ACC3C420B158
FFF075446EA5E7DDBFCC98C19CE90A4A3540A057DBE8063D01569ED584365EAB
B22BBA0431A8F1D4D616AF55B05546CA50AB0C465BA262E0D6D31BFBDADBD406
162CDD041F50EAAD6A193DD12359CEA7712DE0E2C52688521734E34959B6EE37
0501C37464AAE57506CF5A99F48321E69BBA1A415B448F86A947A3CEA36ECE05
7A919BFB7A7656FAE6524D07645EE3C7CDC4136666F73D5B8EA5F58AAA41CCCF
F7F9753477869FE70E12B6B25736AEBDF7563970A8BC6298DFF53F9FDB077FF5
52AE7F2A385D18A82D7DA21B5A5751F8053A7AE6621645B9D10A8602A822A11C
A0234BE3C24346E87DF095DF7DA2C77EC0B49465D2BBE671175E05FFC7127E1C
165B310FFA7A1D4DFC110DEBE19E36592F1EAC099AB18C65B0DEF0473691E8B6
C42AB07B653C08EE983145A60773DE396343905238C0AD4E6C684F9F6F9B6A39
AB64D8503A69A3B2CE229509CA8C3E9E2E4BBA42F0E63AEAE51ED861C14BCE6A
08C7D8FE0623DB18B58C3B8F87C9D5BD709FA503D880742BA7193FDE855B9B1C
697348105CF18F358442930B656A38527E107CCC0C5CC091B1D4887E459073DD
E6ACD01B7D8EBAF035E10C5971CB0F88A13DEA33EA83D868AB6707EB9C61D89B
EADB848A2E15A294026B31719626C858B29CA0D12A4B938D5BAE0244778E3BB9
BBF73CC41D39429C848C02527DE1BC8C9E2872A7E232535CEA77AE91E8CDD904
C48732204BA42E59FC2C20B4F1D85A228EE9ECC9E92D68B2A17DB9D1D56A39DF
9C96F2A757FDD88738E9BACA41ED950AB4D43BEA29A8099E1FACCD43E169CE2B
04DCC187A7F2914F1829DD3B3788EB8923E6189B3D0D3782A39C92525141C780
98E93FAAD1FE96B25420885FEEA49E1723F5721136DACD1768E402A59C3F4693
B04B5326E467ED3EE90075027C5C739A7C266F6787ADFB660A10516BEF0975EC
6C6C55D0C06DD29A2CBEB71682F8FEEB877FA0883F9F67C81251E28DA3918B66
009B7CF7A785B9817FEBB438EBDBE97914927A948698845FA00841F12D6B9F9E
84B29F6ECCE21EC5CF27C30E5906AC1A657DF29D45C722E6C7890320F7C9D6B6
7D7F9ABD2FB08725EE7F95935C983EF143A71D60A7626BCE427FA8D7864C7F03
6607C7BB71C1A4DA498AA15EAD812D1483492311574B9A86483333CE47E31603
DAFFEFBB3E6F51A030C02686C1E539FC51930C69EE58887123579D09A51BFB0E
8D74A2F87BB4CA987512EE8EAA4F5464DE99ED227BEBEA9B37C844C1DC11921C
705D6AB652D1AECBE54980DCDFEC96B8CDFF3D9D3C55822FBCA237133486BD9A
77F299CA42870FC8135DE61AAD9FBEF3E6AB0AF6B347476F7F539D6B3460CDCD
EBCF7BCAD3FDFE7E2251235ABFF20B2E78C87E40D21912A90A2BE24F097378DF
01D5FE479A61CC0EFDE0954E9F3783E1CE14FE217F56D0A5CF45B196AADA8E6D
9470EBE30F925B1269180243183EEC046616F8AC190350A113431384B64CA191
9B00ED7F3CD917EEF7440638C3313D1F65836CF6482CF7F4ACF20E99D60757B9
105589BF529D531DA284EBBB32FCF317EF3F307407A985F9219451EBA1C1DA4C
1C64E33368EDB421A1F0B1820620B2AD6C1102920E8C0E6E00EF9D6BD0B5937B
26736955AE04D6A7DEA7812219EA1346377242B5EB45CBA2DD1721CF9B000C9A
A916DF04A759F47D9477FB35F27929CBEBE30100143549B93CFBFEB83EF5DF84
618481546AA95F6F42D2B9272FCFF64C84AED2C415C41F49AFEBD7E77AE82F58
76ADE63B1EEF8F0E31F82F1DAF24A3542BF5844D5DC794C124E3ACDBD788CA21
CD30FA86DB22F9F54C6D1B6ED127A5BCD280860A2B2364A3C282919CB86634A2
D02246D1389E133A10869B707FF41F8896287592B9BCC8AA81F4A3E3F15B518A
BE80423DE90F29D344728F18DDFCF0BE9D2716E5536E6893B2CBF14274140D49
ADDB97572AAC4F681A1761AB853A367FE0A4D38627AC0914993066BC79AEB457
CD2BE4047430D88ABC75582568190363767F4E45DEDEABB7B0B57EAB6DA65CCF
9176CDFCB3D26E7DFB9D2848AF74D9DAB1B097121E5A6B5DCE73817E7A412B6B
5A9693BD9CA0447927186311DF5FBADBABE0164C2F600338A01B91AD746D0053
C199EA3A3306699950C45437688BCFF9EAB7B163252BCB621002E2AB692DFE40
A2BAD643A08A08151F96BE30969322528E0D920DE903FB4269794EDFF522F700
AACA9E8AAB215DD1FB05EAD35A0A7E0AD2FE8249AEE8F82534079A69457AC75C
7CC25265914AE52BDBD59F413DA42E8D48FF526A275F98CABE9DF4C836212F77
18B09089A5912EA614C7D52D8B6E388682C46C405930BB3A940BD7DB072794FF
E1E29EFA87818925CD899B1B2B27FEA0ABFBA85FBE578C1972EB6CC9228D7C17
9FB6A47D2343B26D17C6842D283747D0B6A66DF8F9AD001D57ACB180EF461ADF
B8D69CEDD46FB49B87090B0F84C6046A6F30831D6CD4AC4D33B4682C09F11213
D5E3192D4C940BE067FE4FCFC60687CDBBE1304D7CECDD6D97ECDFD782BB59BE
B75BC6841B815F26CD5C0DD35E66B2B9348A87BA8EEDFE4A415A99A539B14716
95577A9C7AC180EF7B3D3C16A054096CD3542AA4170F81548452B3EF6E6E0286
7A1FF4F6456F3C83619A3441EC22741FA736E129813EF80E4F55F987A566B209
0BC37A322F39BE38353ACDBB36305A8A596858232903F95089E2952817EE453E
444579172E0CFD00FAB7BDAD324297B5D3342C92A7FDC44680FDA71A2D2A77F2
1A8A5CAFD601362661CF6C6C3242243F22924C49A91A254E31707E24C7DD2CE6
B8F4F2680BAF3F353B60A60373C3F9124F3F9597E8A99362DB137398E4407C39
ACA4109FAE0C2F32FAAC7C0D4FEE7F4DF2DE1597F2D0A1C3A3EDB2661B527931
D62029F5247A751FC270834343EEC6812E01C843C733E7C394DEF759E7497FE5
136153EC8897E731E5162ABEB2DEBD64706CDF3E21671651F42EE158E1AA8192
24CD6FDB73C1F3B816C276C146DD394A506F9B6E91E41F10B6D8708C675AE593
484BC98AC5AE6E8B95D0BBDBD94E2B349FA1AC832D1C348A0EBFEED325C01588
52730B616C36B1CBE0FAA1D054BA316F74E3FDDAD17D4DE7BF105CB28FA4762C
285CD451C47C6804E47C521BB26127990CFD639ECEC11F16A2AFEB3281CA9B67
B20517E28D6A1240EF882BE69239F7265CA6821453E09508B4E8F3CD6B43A177
7C9B509CF121FE707DB034D49EBC45B462471D37AEC42FF3AFC40CA14EC02FA0
B682ADCB1223E6097052179220C77E48BCEE91584B4213AE164831C4D54095E1
03605EE320D758F85F65D9929B720F07F03DF5764749B5D27B09937813A2538C
BF0FE595090D4AC33A422730C8526AFD2F1D9AABDB87ED0E71D821BB0D8ACB2E
1773EF2C8457B8851F384A065B3AB073766082B17B7D396074382370649DDE98
673B7D6E05A5C7C8E4B8B5768FF290F28230A923A43847EDD7D5D9B422922A64
CDF5AC91A9EF4BDA994DBA9664924CDFC2DA28B2B3DC3EAD4161404AB99FCB97
ED4E68EA1988A2D4E88E979AA6F34D4F0CF83D8165A07C848EBA45748B9E399A
9503C406F6AA5FAF6F15501B77D07EAA891AD801E0A5DF30A777583519FB7DCE
4FD1FF66DD70F2CA36F4C52138DF8A8E4E00B50CBD6002DD86C065A3B0EFE63C
F2E07FD6D97B362B9F1AF3D3165ECCA8502D06F43BD160F7DFB48C8E2DD98B60
4341AC0AFB8A0A2FDE4404169537BE60400C8736A32313E0125B0F450C6E086B
A7AC8FC919F3B0E114040D93E03126C18B7483B07FEC7077A3BB4CF239AC48DA
C031F72A5EBAAFD466E02CBD4C863AED54E19061F2B7CBE567D0EACD7CBE201A
B75A9CC7552E0773ABC1CCF720171301F28985583BB4F3B1DDF5B20825B77F1F
F5D3133EEDB2315D83F0A6997D6D2DA93415CB6DC89E1468FA668FB4B071D41A
02F85E6D2B735494ACD8D4EE90E17F36516C146DF326573863A8AA0DFD2C0519
88B881A6AEEE60C6BC4D44DCAE43186771760C12BC5AD62B6E1334F814199DA7
340B8457BAE053A81753F14462B4B5832824353E13F6A61D3945BBE72DEA29B3
C1985D44753D1D568C8A496E20EB8DC3CEBFBCDDB9F17BD6189B708B870490B9
88C3F361448AFD2B96A3B01608CE46E1C712D46DEF7EFFF97466D4D799493E6A
459259D100EB1164B472F13E414250CBCB85403AD086FE59859740708649223F
D6732AAC337916C91A40BDD8F9846DE24C131623D58494429EB06F2EBF35CD65
5FCD80F2581582D086E6D4C4DDAA2C3552D96A4848142E93920BEE150CB499CF
29C74E1EEB277C926B7E4F56EB45BA0700A7844B0D92072809E0DE900FDC5AC3
FE5D599F7AFA10C7B574735227DCD00B008CFDD7E83406F740598AA65C73F1F3
B587D97217D0E9E8F5B192654FBF4CEE66D211DDCBF89BDF914769A299AEBB69
11AA6686FBDD24883C880D4A530FEED63F7C978090864949EFA87035F5AB1E85
33607E2345C8577E8EAA20D654B151E097DEA4C5D0E0670A59FCED8A66DDEF14
40B4C4FF8B286918B600AA91A9B0FF833AB81A07050C46AD09ABFDDD688E3D07
4253F40CD4BB09055565866540163498B0FDE0B2334B1FDBFA25602036E1FF04
95504067588E10BA523403C6904051DDD6BAE5A73F4F3560E035F89B9C84B634
7A0F3716BE6FC7D3D1A0888992695F8D580E4BAB37BCEE57D125468D531648CC
016AD44B84E9086676072534342968A7E4F4519B5B4A3D257DE7043933AA686B
946CE5E3ECA273AF445F4EA999A27A3479671B1CDD7A1CC7F42648E93821353E
A90F4D09493458C6B358A189C6CA3D8EDAD003B283D01023D951DDB5735C2849
C574C7E66A1FEE0A301528C4F0AC88B33CC45669BCE9E6F12046E5DC1098C8CF
E90D149894FB2E97B95F15D78858DA67DD8370578116DE2A040D6BC6AF74C3AC
98C1A43263EE0A064652A64BAE42BE65C287B9806EC5717353A7C9A728EBDD02
180AA3E0E6DC67507A2BDCD879E3671B2D49C409D10EBF7DD81CF7FF25E02110
D75665520A0A68E5E36FE155490A3E53DD7EC5CCD0F0A73AF40F32A337A02DE7
12E72BB6EFE156F4CC348F684CC2442B24E5980648C6C0187FC4DE9F8684CE82
EF82CD18936AD27E5D19F4943DFB27B8F49C883E6EBF27B3E42C7E75A34A2581
7FA4487327B2231DC1BB637FEDDCAF3DDFE7BC49B2B2D5C8735EA187FE93B6BA
C31568E21AAD2D6142A29EF653737AFEAF47CA872B5CBD22B18F15DCDF7D4A50
3A77DDB7EEE37C3996B8F9B63A4ADA4F179ADDD5BBB19D2C58F92C2F722243B7
DAE9C7D45E05D5BD10AECD075BA65D8FD4CFD4C49C053AEE2B0BB11936D70667
3A8FB87D1F3C4784644A715401529EEE09198C2D856F36756620CDD2E8C6DD0B
59469AB2AB0627CD83560D26FEC019AE2422DF04AEB99652F87AADBE3072DB5E
EC16F60D7B264F9E7166CB3DE52FD53C456310BC56E98168287E93E8223E87DA
4ACCAE52FEFAB99FC56B18A23D0D40AC823E5C2218D68F9F6737BF4920FD4E89
6E27F87335AC3CA48265ABE9C3BD7F7985B331028361C5748804C0399D4B716A
7E4E4DDFC835F0895294BBEEE6DC7CDBF23638ED55ED2B41FA27BCD9351EB3B6
8787BEEB573362349D9B7BF29348A141979012202420A6E8E3B725B4F2106822
DACED16A9BA35190BB3E32692C8F2259A76592D6EF00EB133D525BECF3FC6689
77264F0FE3168B29D0319AFA673C34CAF20BFA01435BB10C06F009075DF25F42
20FC2E6F042696FE17C78D7C0DEA025B26389B9F3B72E60DF8936D760684FEC7
EECD8540537D31D8FE853D0257BC3B41BDC012694689FED1E72B7E586E0D2145
5953103B1A0BDC0116379D0176E6FFD996ECFD6D0C224FFF6685335BF52B7530
F20C412E4B9B5C15D3E94A91B40F07B3C88E8125059C99432F18712ACA61255C
031A516E6016A1AFFF55295B55A8409BC1416939EA27B1F522CE9A68ED66216E
40627101BFB70AD68E0AFE608B5A1955E90CF5F7BAE8F04DA02BEB2806FEC5B0
2786C90DC77FF3C19A3D34D7B74316A432C07E19A2AB281316C014D7DBB579A4
C5BD747C3357149C8D4EE57859F926071EA617ABB639F4544A186960F4B3E428
D7A0D27A98CB91724368755B3209FE693AC747D5052766C785FDEB995FF0C7A9
7BF3B0A59D955CDBC4E2E37B2914CB36DEF511F6C7A54AC9040CAAD2E0493DDF
748C0383E0E1EA8B7A5207531A6382A59B14D484250B3E14A8A283A4D9867E86
D37ADA222CF27016CA835B15B775B5D4A7C445D07DA67240AB271E681113C936
E32834FECDEBC6D46661B85450E00A33BE0C7B4A4F6439E9E0272AE4B21ADE4D
2245AE861D4CFB8CC6BEBE1FD0676E90BAB6003B9A0433621AA9743A49141C02
7AA1FF6C324A128569DF5F18A6893EE2EAFC6DD91F333E0720ED4DB7F8D74075
6A350D0D9B1662E3DE1D74A00DD33F6B1E04BD9EF091899C1C55CA769B165C85
3BF202CE477FC274072455BBC886643CD2EF301587BCC76C55EBE012762A1668
C2EABE34E13BF38AE3CED368E6B5B26EAF84F168C898545D0FD04E490E24D698
F19460BCB8753D65B614C78111CE203480EC2557481A84FB15D2AE3533D6E325
38B3A953D23E40E3739BDF2F671398EE058587F2BA848DB71036BA48B49D9922
776519ABEB8C62DFD2D099A107A636C5E2720676095E977B5358E6D9148E59F4
182300896E01F41A32F44F786B356715D7FE942B540F04D37E1C128BDAF99D18
211935A8531311315E497F7514EB79699FF5DA5A2923BC41F17BFA38468C5B2C
25DDD22AAFFF18A58BC6DF8AE1D129DE029C4FADAADFEE8D3EC23FD3E747415C
E174AB06C0F60DBB851B726B2D01A60BD70F13E1588C55CA690AF1DCF262D0E7
FFF428A6FDE07E640495547DB1A0019DE6165B5BA2C5BCDD8CF8FD7216685F38
BD7F587EBC918CE9CDA6FAE2BCFFFE44E005B47830AD6C6ECDEF5E22F03CB8D2
F3AF2BD5619BFB85D2E60F62A71AF73F85C8B3B44707872C48B3856949583889
FE9DD617240BACD746E3A51A57CF0B4758D8E599F8978CA0DA09E18C1E19E8C0
D8423FFC1BCC840A9B8C9F3AD5E02F3FA3E20BC383E64BA27E1886452AFD75E1
8FA079DADA35B9074DE04121235E5E571BA36B1219958ECB12F04A669B29FEC0
43F0B34760F28D6EBFB54B5F401CE1EAF9490BAE6328B03ED7715EA8E90BD037
087F820CF7356D4D8895720CE930323655240744D3C159890F2C48E6412081B9
3ACF24C2DBACE876A6A4FABA7D321B297F7108DE584B9680C454A1009C02CD0C
FC699AC849CF31ACCF519E98C60510BF286E96996909953F508EAE9D3051E46E
E929B30137B6887D1C74B4116EAA2E59CDBD9E3D4D08EB8CD6BD302E8F98F25A
0343BDDF01A8BA86E920793714BC2D97FA674F88DEA245B1F2AA0D75431F6B52
8FAB4EAB2B3D1FF9B6951E6D1F98E1D9DC1FFC40CD48E8CCB07157BAB71379D5
29D4E4F73DED0C1812AFD3193B0904352C9ED30D6BFC5B045493A1A2415494CD
8FB6E836F032FB62B4D6D2654CC6EFBEE1F7837A87B344A2A49C9F6B11D137F0
408DB17384BA0FFBFB807922394E60D60ADBBAADD297563EA6C139D44BB49B0A
AC03827B5672C1568E0EBDBF6FCD9338628F6678A61A40DF07C128E7EFA4E6CD
68BBB5280D5AE01187A1C188AC9BF7D0AD1347FE1F9AAF7C0A4E96A431C5DBC7
C449FFB3CDC6552984B334FA2CAC00F034A988CA5F70D698700857BB54CC7EDB
0686AAAB8A6C90D97E2BFED26CCD58B2F77DECD62180578678082CBD87EC206D
843988C0E00B0BAD8EAD9B2E82A7BA22322A110D360D49610C82DAAE7019AE38
6845D208F96FA864AB66C91B29503A73A32322E4AFAC96B0554E561F4E90FC94
17E848B126A282B449F2F7B1055EBA9A150E75FB58AF6CBFE7118A0239A95D0F
2D920A2F18443C86582B5A3B7CB33A9E51EA1E8209A9D3448CD3AD279945B0FB
2A589EBC395F5F854347C68B1D3953CE7A57B9295741BCC92E0E66A43E7943DB
D4BD58A3E3505547D9461C62FF2F0F518881DCB0DA8044898B238DA721135265
8CAB9B34266FDF7CCB4A4488F8ED48F0D55E518B6508C81C7BEA9093B17C6D6B
F266D03CFE21910AB877CE1FFB06F87B484CD14455AF5AB1D4414AA8498E2BA5
678D310BF7E61DE40DFD1E73CEEEC27AB4810C3CD66B15BD5FA1CB2455B55DC9
03F7798587A8F903AD3A16CF3EC3E453CAB3D9319D0E3F7D76E7FFD1E1B1F0D1
E55215C4D55F4A1C72C72139D4401BA11D25AE92CF9A00CA94A36BC4882DC2EC
C77BEA38762F55CD368F1BB0BC36A85CFD06D6D842C666FFF01F1AF17456B55D
71238C8EDDF4C3133788BD5D97EA671B997CFE7FC2014BEC52276803CC1496B8
2C2B961430B9E2E1D2FDCF59612FC013E193C322CF56ED8692438785199C559D
DA719060B5E2516D7C7024A66EDF62A2D7319D37B1D049408DB3F7E21ECFDEB9
AF8E9CA58C74FD193D82B12758A895FCCD3A4A6D78C8237BB4BC95E0EC002D15
E94F14B7C4265F3BC46A78F701AD7B15628D4BA4D2808B7748F5DE33E9F6A34F
86FD6A51F11841E3442D1118E60114DF3C54C3A1737D7B5FA41A046B22737232
9F72480BF7F0284EBED9F769F72D3C9DC49ECD2DA5C073CAFC1FB27501364F2F
C988233BD5A46BCE429E7E73B2AA9DB2D58C7413285132469917ECE9D940C975
D52BB6D14FBB7CB3ACDC7108EC4DF13835CA8104EA48BEB0CB5CBA52F10D584F
5B2CC7986E6D3F683DC578FC51F9C429BA1943CAFECECC94F50D701DBA65CC48
EE2E8A05256AA589E650376B267B305B08A881AD81D09FF14C8B4AE7DEF075A1
B363B211706C20819DB6DE0FC57626BC6B4C0B02C835DBC2F8D0D2AE27D4DD2E
9F7D29D9B3BE4346C20E78F02EC7F4F9DD70C254C2D26C722B6FFA36AB9E9A4C
A2E083A180087BF5039B152667C6393E6E979245777F8E4AC3436EF5EF2C9A7D
31731227FF07D8F12CA4FA788A71815645F71502FE88781207E6FD607219A110
7A6333C18E7AFCE37D9EA619FF8A849071A794626EA68033A7386E658EE7D349
8849B78E31BA402AADD6916330C1EC98F3B2BE38A80184EFBA7CCF2DA4BBC2DB
8FFFC108491C7221607299BE16F13CD97879C5C2AF3745BD7A465971FE1F7BFD
5E00B981905CBBD31380F251975DA6AB25DD2531F2EF93059DF6530E469DFDB6
FE7331EFD01F9A64CED0B07BA43D832CBA79C417693848DF39D32CCB9EB88928
BA8A63FBFF67DD53EA9502E1C0FBAEF839471B17A13A16483993AD9A2AAB5DBC
18CC5A5DC82854863384793808D8E85117DD19839C5EC0F1373D7F4CAC71B816
99ABA5959C2F253F8AB29840C4072884C00E0686A4B0FD20A4B74187AA06FC11
9A2688F62DFF78D0A7864B8C0F333CA4134B5201100FA32E20F70DF8F25B4A97
3174A5CC882F63F928C9EE90F0F52522C4E3158247D514B62DE6D4A13E8F6FB2
CFFE6802377D97F4A14E35FE1731ED1B03738F429945723864CE7445171F25E3
DC08A49F917FCD93D2BFA52FF765D101DE89412928C332810C2B098F92F4E4BE
D22FD35C228AC6C0B0C77D6CE3DC5A691990705C96B3C3AD31AA94D4FA7243C8
C890ABDDCA6BB50C13904D4096A0CEF4A660337B228822759E9C99E48AD03656
55AFBCA876BD4ED18AF0DF43808F8546359F61C5913E7A4FEB92397005428690
7A372A3B822667412C412103B2EA77BC24CC7F7101D70D4F24587FA4491FBE8D
E071CFF8FABC6630F956394EADF5B855782088AB321B729A85752867E6767AD8
250FA90C73F2AF946F7553380AC3EE14505A626CF92E0833E71541CDFAF7FCAB
E4034D533F391A942A5DFDD86326CDA3BD2FB4D8028179830CF31693D9BCB620
C0E388FE4061C715E1E3D1F0BC55BB4B0335AD3D2D29BFD919C1AC73AB048CE7
59D949573E562BFC0B6E85034F10372055E9678E7EE3D29D2D0A525B340DAE0B
4B4CCAD97722DC03540041B2481315D81A975212ABA21EA25A071BE7B3CAACF9
75546A74035D629FE390D92C48A28C3AEBADCBBC66F574EC65E8B8233D6F6D63
CF5756F791E8F826A141FC5974A6CCE2DD28D5DE206048DF309592BB10969510
8E30B451A746BCA0F82B8A3D9D5763BAFD7730FD469A2795714C15C5EDC78984
0273858FFD5BD421CEDEBFA5849AF4C5BE4D46BB472DA1D82C2CF4442C59B91E
971401A828473AAA4F261E3EA716AB4A391AB36A4738016B7AAC9DB8B035173F
E898BE71C92F3495FC3B5CA4D1300ABAD3D8D933CFF5B72CA8D0455FB1CB9558
F1E19BE9ECE363A863C7E78A758EAA406AE10120EDC952F675C8D2EBAEF9CC6D
63FA0706A21B3C901FC267E5A6F495E7CF835E8B8441F419FC649F226D048947
A0D16D47B6D0C5D4518AA6F8BCCD09FDA8DE9A981FDD1E58731513F2FCACD15D
15E1A9773B11BCA1767FFD6CC44D7323E52F21F702FC83E6705E8535D243BA5C
BB83CDB39FBDE3B7FDA192ABB2CBF2D3D6316293743C89C66DEE1713173A031B
0C4CB7ACD26BF1123B81D102119C0F7BE3C275E5043CD61B47D750C56B85AFA0
8A2E16885DEE75D9AE58A5527B118CF3FFA9A1850539F817F18721895D537115
351A5E75A07C42D9634A5260036DBB7D469BF89FC4F495D59C3AC6EF22C933FF
0204FCF844537831FF9DB03B350BAB4C94A2F7A50FB93800D83F11E14288BF32
0656B5FCEDD5ACFD1F3E87C61A6EEDEB7B0FC8B37EC071D02DF5A403B49C4FA9
AB5D0199EFDB588B038B47A1BC7F1B6F92CD4A9A1AA59B11445D7C53260ACACA
8D3A37A7495195355F9D2BB5265C855922849D15335D706C4E12A8074223524E
1D4EEECA403703725D1B3517A41C90915FF56B7CAEBA43ADB6342FFA8BB3D32A
11E9AC1342B53018F26FF486AD26CD0C860B21B1C1087F7ECA4627F0498F85CD
88058E582445B47B20381788E7E1E0CD730B50E898A87BEADD46A6238ED0F820
FACA54DC64323C1A8554AAFBE930A2640E6EF433706233F9C649C814C11051B0
3EE25F65D6EC5FBC8C464F6798BDFA6B81A09F1F7F8ECA107BE980BAFB2F0D5D
8E148BDAEA7C75309295ED6FC9351427521C3021D207A3A0767125B4EF1038D7
5CCE9BB2148961A32B2F1C935F568C04AF9FDF9793100465A5BB1AA1BF761E02
147667529CAB289E23518A486F7C0A280D992BD112FB69689DBCA9BCD5934C38
70FC85C8AD34D486F959797E67ADDA10AB7155836CB4D286B555384C61B47EA9
BA280551370A112B7434C2727E3F77D0B55DF56C90BA8983015A048EC72BDD22
7D48D171093E0AC993E6543103590DB1B4C3849CADA294FCBBE167553CE71575
664A2BF64936A5EA3ECD52F0ED04D4B77CC57E6379502672ACDADA6534A95256
7BD1BB5ECA448C1740B4BE0A645C2D0BFB5EAF4CC1F49B0ECED19AABC95E95C3
FE3A58DDBB216AA4F34573B1D159030EDA1C2D1749AE7BDCBD6A68383345B203
4AA02FBD67CB0BD10C971027B351CFD984385851F10D55ABEDA15D429B066AA0
64319F0F214415EABA1686290E62457FE1CB18060118BAF296CBE6E139F7A9BA
E96EC66AD962C03E082EE888EAD129A653F52AF65DF62656F82E99B34CE5F04A
D91D7FE065285892980D560EDE5CCFA7FE2C23722B132118A91B8B14C4F666D3
9E41E410EADED600FB8EE9EDB6543B9A87DAC654CB5C681B12A981CA8CFB841D
B7326A8BF2235F49ED2C581345C8B9B830B81C38E0B9F9E72F1270E5D12578CF
F6090BB4BB02768A597F965827B257C5438E5128F8B2C4C456D8A9E2D9FDE4AF
A5E1CC07DC24367B0022222002143FFCB8558F24DF2503CB37E391E9BD2115CB
D87A636525D538FA695EC653BB6415E318CDA559A64E0AFE215D3F40BFADD54A
E8DEC870E15EEAE5BD1763CCF1E9B1A38DB796622E4C47410EC6CE8AA90EAB46
4672442BADD00504EA512988E34C7221A515B66A852C58A4488706CD18DE2051
0364190D85AAF4CEA6F25130DEE0BA4D24A8095EE2F32B6ABDB83AA4BE6919ED
6674ECF06ECC0BFC7B44294F18834BF8F24B9E1F7FAEC110DAA60AEC8944E197
ACEAF3085D2CC0E824D16D7720535C3FE213EDA29D61944CD5EAE3BBB256AACF
31ED531223E1736D43F429D34181CC8AB76216CCA7C95FA8BDDC6851F56AEE30
1ECDE5E9E405C93ACBFAF752FF8E8AF35AAD49E0C72515B84C7A96648664B0F5
C6BEACD40C9489E411A7041E629373EE261D71070371154966D4C69273DAC50E
06298A718F25445ADE838766E79E26C3C6806AA021D7F149B5B367BF5B4F7800
8B5B51A3CE5CECFEA594988585854215145678DD6E1B06599F877B94C351D258
445B3D0B5EFBBA60CA415EAF9086B219B56DC0223F284AAC57C9E05938000730
55406A76936A7DF3254E72EA6E6600CA9E43AC11F37E95F2C718E30E7AAD0C9B
FB9CA8BBFBCE0BFE553A28E5B8A70E81F2BFDFEE1D019BB9FD35E2083EC4F57F
7092F4F1FB63B17AB70616847FCBEB86AF34DA1AF3169AA0DF977F0ADF868C50
8C7BDC86454EA1B01B84F5C4E22E4D77548986B4A3CE9FF220736CCBC1A76D72
C409EA99F0B5073F5C8B2062F8EC6044F97C25DE80BF52ACE0D2BF3F905172A1
205F5519D9B73E284E620186F6735C01DFB019DC549C1B15E8928ACED23C55F1
3BD46CB8E36AE9134270C95D6021282A59460F3F5E01EEAFA4403396D3D36DF4
9DAC28E8A392020BEB51E3360EA0D11FC7D5CBF27FCA2DCF2BBCADC98E8CC730
2D6862545882BB9E0557E42B2D845377B2DD47245D2B60C26CECA33A4DFA67FE
807FFDCD29A49E9D087D4EC33A321B9E9C8F7B67C504E00960363566B29F3980
899E4863D1BF74EA4B0303CABDA5371B15559D099AF991B57A4CDD3153EBEFE7
E0D81CF15AB09E9876DD11FE252152F75D15CBA114EFB91EC13384EF6A6CA97E
4B26450861336B7F67FE78154E68FBB8A59AE99FD383DAE4827366C247CD7BCE
AC662C359FE018719895F5AB387960882CB80C8D2E34008A33F4A14333C06056
A5AB6FC1D641FCF5519FB8B7D224689D1ABB18E21347FABD50D012A696C087D6
FA59A1A0F6A1E23DBC58F01413CF1971B51F82E9C8E4DF60FEDF28B3418DAD74
7B3162B8BC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 114 /r put
dup 115 /s put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
3E2BEC20D96C8D8F87D3795D89FB5CF20764520BFFB68DBEC2E6CF11766F3C36
158216CB5670AAAC6B6DA6703EEC34A7A6121912C503DACFF77EEC307C814781
1DDE8FBFC4C619015754D5A9A19F6C50825D7713B249F248DC97A1861F4E5331
48B227C483756CD96295D1ABE014D1FE73EF4FAC79473FD6AB6F0CA54EFEE555
0A4D46368EBFFE93D013746240401E8344D2CE1E0B351AF85B025C4C233A7164
97EC29F67D26F13FD1D838B581E01C17876215F42905EB9854230D8AA697FFF9
60C6CF4A2D30F5CC3D9C486405DE611B6D256905DFADA40D973BF64674B442A0
1FEB1A3D4919A07617A27743A09CB7D09D704091DDCAD3EC109234B92B216272
DEF791C4CE2AFF1FAE873B55EEA236B5D7863EBEDA745A01F1B923C099D45133
777ABFD6B7F8BC5AC1451D7C099D307AE7D722E2E51D1B37D35113BC3C4E5199
9A3CB6CDB9A5989F9CBEFD8525DD0CB408CE3B330EE56916962985562FCC86A3
43B75EF4246FC7A4CF31F045952B00ECCDEDD2CF09FB40AF4E4942CED6C94427
141538E4F123C3BA36F1C48014EA8E07DE5539999BA7BDCBD9F8FC03EA22E679
F8DE87347B72E49B656ABDF8B8803C27AF08A870B7275117B61406135A9C4D5F
BFED36E5624146C997664753AF1810FDFA26E48510FC4F87379E7D44705D5498
FE374F19349E440AA3C821EEB6533565368A67A019C6410A2E3EF1BC946066BA
0F2F9DFB6905E5A99B729BF724E2E99732AA95653A290B59F06E9309EBED4A45
7F14123650AEF3D7E1B4F588044549AE79DBC0BF48C90CB964A7AB8BB66B2EB6
30E5B583C60EBC2E0F44699AC4D195810EB7FCF5EFF2F6104BFE83F8FAD4127F
CFE58BA5CEDC9A7F2685DCF74A9FC6FA7B76BF49F403F1C1502349BC0A974850
2BA3C55CEBD65A2C6B02C09672FC5050C3313FD5D15E531445102FD4C10E3105
F811FF33B0D333F21DCA8150A8D0B34DE590F50C4EA1E8CE6A2838D1D0B6A38B
5F76FD8E0A434781FCBFCD51471400C79F0B74E70D21228099B7BB8972C58DCE
1263B097F81C72CE1B3A5BD51F0B47F690A1838CC209E8FE7ADF7D6B1401B66D
E7D164DB1EFA349D27B2B1C9258BDE9F85537F47386A4FAF05521A2873DD8B84
D5EB8796FECB0E0A9F3BCAEC07FB7F3A44016E7EBEE062A2E45166A46FDDA99F
EF68A94490B936C5226CCF0E42C4C92A733EDE5E0F121B82C6847D3F9A5BDD19
B5B5BCE273D9BEC21301437B065502483F7A6A47A2CE8413245207B7D31B29D8
F12D7571D1432E0B2F28CA32C004994D87ABCFA0B51E6A92AEC5DF6C09D904F7
2EB575C6971EEEC686B3444D3F6923CBA81EF0CEAA52FF275F879C9C57A154B7
974BC55868E2907529AF51F1396C2A54681FF1ED6E15368C53F545FADA8ADD4E
9CFFCAAAEE25EB1A75BE6AF066B9648E79DBFDC18AA79DCE516229BD1D10884D
A240AB5243CF69688E32A88B9F8EC31A9D5E301C6B4792B34F4C5358D61E7C18
F55A27B2C257FCE06539EB0A7C9BE5D35021D9433C5451EB4E7A17FE49E164A9
3CA58E8ABA129A48123CA1ECCB823055EB8BD0202469EF8DF55ADADF4993B193
1DA1DD9F02F652FD9D4615E33321E6112B02D11A4668C46FD22A69D6E9DEE079
5600DA6E6C1CC9F4FAC6C1C9CD3607A8883BBB5F5A139BDF6AB37F380204D4D0
F4F8709A64463779659A181EB81E2E64EA4C12949926404932C2EB8892A1B87A
D907C478EC8A0B4368BCA53B6D93B648C74D8B2EA46E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (assignment1.dvi)
@start /Fa 148[43 107[{}1 83.022 /CMMI10 rf /Fb 139[23
11[35 104[{}2 58.1154 /CMTI7 rf /Fc 131[85 42 1[40 39
1[38 45 28 34 35 38 42 42 47 68 21 38 1[25 42 38 25 38
42 38 38 42 9[83 2[59 47 61 1[56 64 62 74 52 1[44 32
2[54 56 1[59 58 62 6[25 42 42 42 3[42 42 42 42 42 25
30 5[25 19[42 19[{}54 83.022 /CMTI10 rf /Fd 128[42 3[42
37 44 44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23
46 42 25 37 46 37 46 42 3[23 1[23 51 3[62 1[60 46 61
1[57 65 1[76 52 65 43 30 62 65 54 57 63 60 59 62 6[23
42 42 42 42 42 42 42 42 42 42 42 23 28 23 2[32 32 23
17[42 1[42 42 5[46 48 11[{}73 83.022 /CMR10 rf /Fe 140[53
55 3[75 7[41 61 1[60 16[100 82[{}7 119.552 /CMBX12 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Homework 1) /Subject (CS 44 Homework 1) /Creator (LaTeX with hyperref package) /Author (Michael Elliott, Kiarash Teymoury, Liv Vitale) /Keywords (cs444 ''operating systems'' files filesystem I/O) /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a
150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0
a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fe(References)150 165 y
SDict begin H.S end
 150 165 a 150
165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165 a 150 132 a
SDict begin H.S end
 150 132
a 150 132 a
SDict begin 12 H.A end
 150 132 a 150 132 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Adamowicz92) cvn H.B /DEST pdfmark end
 150 132 a 0 TeXcolorgray
192 265 a Fd([1])p 0 TeXcolorgray 41 w(Zo\014a)17 b(Adamo)n(wicz.)22
b(A)d(sharp)e(v)n(ersion)g(of)i(the)g(b)r(ounded)g(Matijasevic)n(h)f
(conjecture)g(and)h(the)g(end-extension)321 364 y(problem.)36
b Fc(Journal)30 b(of)g(Symb)l(olic)h(L)l(o)l(gic)p Fd(,)e
(57\(2\):597{616,)23 b(June)28 b(1992.)150 418 y
SDict begin H.S end
 150
418 a 150 418 a
SDict begin 12 H.A end
 150 418 a 150 418 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.AdlemanMa76) cvn H.B /DEST pdfmark end
 150 418 a 0 TeXcolorgray
192 531 a Fd([2])p 0 TeXcolorgray 41 w(Leonard)c(Adleman)i(and)g
(Kenneth)g(Manders.)33 b(Diophan)n(tine)26 b(complexit)n(y)-7
b(.)34 b(In)26 b(17)2959 500 y Fb(th)3053 531 y Fc(A)n(nnual)i(Symp)l
(osium)321 630 y(on)h(F)-6 b(oundations)31 b(of)f(Computer)g(Scienc)l
(e)35 b Fd([)p 0 1 0 TeXcolorrgb 1721 630 a
SDict begin H.S end
 1721 630
a 0 1 0 TeXcolorrgb Fd(9)p 0 1 0 TeXcolorrgb 1762 577
a
SDict begin H.R end
 1762 577 a 1762 630 a
SDict begin [ /Color [0 1 0] /H /I /Border [0 0 0] /Subtype /Link /Dest (cite.FOCS17) cvn H.B /ANN pdfmark end
 1762 630 a 0 TeXcolorgray Fd(],)28
b(pages)f(81{88.)150 684 y
SDict begin H.S end
 150 684 a 150 684 a
SDict begin 12 H.A end
 150 684
a 150 684 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.AlloucheSh92) cvn H.B /DEST pdfmark end
 150 684 a 0 TeXcolorgray 192 796 a Fd([3])p
0 TeXcolorgray 41 w(Jean-P)n(aul)d(Allouc)n(he)j(and)f(Je\013rey)g
(Shallit.)36 b(The)27 b(ring)f(of)h Fa(k)s Fd(-regular)d(sequences.)35
b Fc(The)l(or)l(etic)l(al)c(Computer)321 896 y(Scienc)l(e)p
Fd(,)d(98\(2\):163{197,)23 b(Ma)n(y)k(1992.)150 950 y
SDict begin H.S end

150 950 a 150 950 a
SDict begin 12 H.A end
 150 950 a 150 950 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Azra71) cvn H.B /DEST pdfmark end
 150 950 a 0 TeXcolorgray
192 1062 a Fd([4])p 0 TeXcolorgray 41 w(Jean-Pierre)21
b(Azra.)30 b(Relations)23 b(Diophan)n(tiennes)g(et)h(la)g(solution)f(n)
n(\023)-39 b(egativ)n(e)22 b(du)i(10e)e(probl)n(\022)-39
b(eme)23 b(de)g(Hilb)r(ert.)321 1162 y(In)j Fc(S)n(\023)-40
b(eminair)l(e)29 b(Bourb)l(aki|vol.)i(1970/71.)h(Exp)l(os)n(\023)-40
b(es)29 b(382{399)p Fd(,)h(v)n(olume)c(244)f(of)h Fc(L)l(e)l(ctur)l(e)h
(Notes)i(in)f(Math-)321 1261 y(ematics)p Fd(,)g(pages)f(11{28.)e
(Springer-V)-7 b(erlag,)25 b(1971.)150 1310 y
SDict begin H.S end
 150 1310
a 150 1310 a
SDict begin 12 H.A end
 150 1310 a 150 1310 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.Baker68) cvn H.B /DEST pdfmark end
 150 1310 a 0 TeXcolorgray
192 1427 a Fd([5])p 0 TeXcolorgray 41 w(A.)34 b(Bak)n(er.)56
b(Con)n(tributions)33 b(to)i(the)f(theory)g(of)g(Diophan)n(tine)h
(equations)e(I.)i(On)f(the)g(represen)n(tation)f(of)321
1527 y(in)n(tegers)25 b(b)n(y)h(binary)f(forms.)35 b
Fc(Philosophic)l(al)d(T)-6 b(r)l(ansactions)30 b(of)f(the)g(R)l(oyal)g
(So)l(ciety)g(of)h(L)l(ondon.)f(Series)g(A)p Fd(,)321
1626 y(263\(1139\):173{191)o(,)22 b(1968.)150 1680 y
SDict begin H.S end

150 1680 a 150 1680 a
SDict begin 12 H.A end
 150 1680 a 150 1680 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.BartonFi72a) cvn H.B /DEST pdfmark end
 150 1680
a 0 TeXcolorgray 192 1792 a Fd([6])p 0 TeXcolorgray 41
w(D.)i(Barton)e(and)h(J.)h(P)-7 b(.)23 b(Fitc)n(h.)30
b(Applications)24 b(of)f(algebraic)f(manipulation)h(programs)e(in)j(ph)
n(ysics.)29 b Fc(R)l(ep)l(orts)321 1892 y(on)g(Pr)l(o)l(gr)l(ess)h(in)g
(Physics)p Fd(,)g(35\(3\):235{314,)23 b(1972.)150 1946
y
SDict begin H.S end
 150 1946 a 150 1946 a
SDict begin 12 H.A end
 150 1946 a 150 1946 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.CaludeP83) cvn H.B /DEST pdfmark end
 150 1946
a 0 TeXcolorgray 192 2058 a Fd([7])p 0 TeXcolorgray 41
w(Cristian)32 b(Calude)h(and)g(Gheorghe)f(P\025)-42 b(aun.)53
b(Indep)r(enden)n(t)34 b(instances)e(for)h(some)g(undecidable)g
(problems.)321 2158 y Fc(RAIR)n(O)28 b(Informatique)i(Th)n(\023)-40
b(eorique)p Fd(,)30 b(17\(1\):49{54,)24 b(1983.)150 2212
y
SDict begin H.S end
 150 2212 a 150 2212 a
SDict begin 12 H.A end
 150 2212 a 150 2212 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.CantoneCP90) cvn H.B /DEST pdfmark end
 150 2212
a 0 TeXcolorgray 192 2324 a Fd([8])p 0 TeXcolorgray 41
w(D.)19 b(Can)n(tone,)i(V.)e(Cutello,)i(and)e(A.)h(P)n(olicrito.)h
(Set-theoretic)e(reductions)g(of)g(Hilb)r(ert's)g(T)-7
b(en)n(th)20 b(Problem.)i(In)321 2423 y(E.)h(B\177)-42
b(orger,)22 b(H.)i(Kleine)f(B)r(\177)-44 b(uning,)24
b(and)f(M.)h(M.)g(Ric)n(h)n(ter,)g(editors,)f Fc(CSL)j('89:)38
b(3r)l(d)27 b(Workshop)g(on)g(Computer)321 2523 y(Scienc)l(e)f(L)l(o)l
(gic)p Fd(,)g(v)n(olume)d(440)g(of)g Fc(L)l(e)l(ctur)l(e)j(Notes)g(in)g
(Computer)h(Scienc)l(e)p Fd(,)e(pages)e(65{75.)f(Springer-V)-7
b(erlag,)321 2623 y(1990.)150 2656 y
SDict begin H.S end
 150 2656 a 150 2656
a
SDict begin 12 H.A end
 150 2656 a 150 2656 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.FOCS17) cvn H.B /DEST pdfmark end
 150 2656 a 0 TeXcolorgray 192
2789 a Fd([9])p 0 TeXcolorgray 41 w(IEEE.)46 b(17)675
2759 y Fb(th)774 2789 y Fc(A)n(nnual)33 b(Symp)l(osium)g(on)g(F)-6
b(oundations)34 b(of)g(Computer)f(Scienc)l(e)p Fd(,)g(Houston,)f(T)-7
b(exas,)31 b(25{26)321 2888 y(Octob)r(er)26 b(1976.)150
2922 y
SDict begin H.S end
 150 2922 a 150 2922 a
SDict begin 12 H.A end
 150 2922 a 150 2922 a
SDict begin [ /View [/XYZ H.V] /Dest (cite.BraunmuhlCV83) cvn H.B /DEST pdfmark end
 150
2922 a 0 TeXcolorgray 132 x Fd([10])p 0 TeXcolorgray
41 w(Burc)n(hard)i(v)n(on)i(Braunm)r(\177)-44 b(uhl,)31
b(Stephen)g(Co)r(ok,)f(Kurt)g(Mehlhorn,)h(and)f(Rutger)g(V)-7
b(erb)r(eek.)45 b(The)31 b(recogni-)321 3154 y(tion)e(of)g
(deterministic)h(CFL's)f(in)h(small)f(time)h(and)f(space.)41
b Fc(Information)33 b(and)f(Contr)l(ol)p Fd(,)e(56\(1/2\):34{51,)321
3254 y(Jan)n(uary/F)-7 b(ebruary)24 b(1983.)p 0 TeXcolorgray
1929 5349 a(1)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
